{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGriditem.js","components/GiftGrind.js","hooks/useFectchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setImputValue","onSubmit","e","preventDefault","trimEnd","length","cats","type","value","onChange","target","getGfis","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","console","log","className","src","alt","GiftGrind","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","divRoot","document","querySelector","ReactDom","render"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,iBAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,uBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,UAAUC,OAAQ,IAE5BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAyBO,OACvCN,EAAc,MAQlB,UACI,8CACA,uBACAO,KAAK,OACLC,MAAST,EACTU,SAvBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIAA,EAAKC,OAJL,cAIbC,EAJa,OAMbC,EAAOD,EAAKA,KAAKE,KAAK,SAAAC,GACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAeVM,GAfU,2CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAW,gCAAhB,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCDHS,EAAY,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECAf,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAbAC,qBAAU,WAEN1B,EAAQC,GACP0B,MAAK,SAAAC,GACDX,QAAQC,IAAIU,GAETH,EAAS,CACRjB,KAAMoB,EACNL,SAAS,SAGpB,CAACtB,IAEIuB,EDnBiBK,CAAa5B,GAA9BO,EAFgC,EAEhCA,KAAMe,EAF0B,EAE1BA,QAEb,OACI,qCACA,qBAAIJ,UAAW,2BAAf,UAA2ClB,EAA3C,OACCsB,GAAW,mBAAGJ,UAAW,0BAAd,yBAEZ,qBAAKA,UAAW,YAAhB,SAEQX,EAAKE,KAAI,YAAmB,IAAjBE,EAAgB,EAAhBA,GAAGC,EAAa,EAAbA,MAAMV,EAAO,EAAPA,IAChB,OACA,cAAC,EAAD,CAEAS,GAAIA,EACJC,MAAOA,EACPV,IAAKA,GAHAS,YEcVkB,EA7BO,WAAM,IAAD,EAES3C,mBAAS,CAAC,KAFnB,mBAEpB4C,EAFoB,KAER7C,EAFQ,KAO1B,OACK,gCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI6C,EAAWrB,KAAK,SAAAT,GACb,OAAO,cAAC,EAAD,CAEPA,SAAUA,GADJA,QAKZ,2BCtBJ+B,EAAUC,SAASC,cAAc,SACvCC,IAASC,OAAQ,cAAE,EAAF,IAAqBJ,GAGtCf,QAAQC,IADO,sC","file":"static/js/main.72af137e.chunk.js","sourcesContent":["import React, { useState }from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n    \r\n    const [inputValue, setImputValue] = useState('ingrese value');\r\n    const handleInputChange = (e) =>{\r\n        setImputValue(e.target.value); \r\n    } \r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trimEnd().length> 2 )\r\n        {\r\n            setCategorias((cats) => [inputValue,...cats]);\r\n            setImputValue('');\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input \r\n            type='text'\r\n            value = {inputValue} \r\n            onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n\r\n    \r\n}\r\n    AddCategory.propTypes ={\r\n    setCategorias:PropTypes.func.isRequired,\r\n}\r\n","export const getGfis = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=rZ580dt87J8ZeZpYe584NnxC8mdk3sbZ`;\r\n    const resp = await fetch( url );\r\n    const data = await resp.json();\r\n    \r\n    const gifs = data.data.map (img =>{\r\n        return {\r\n            id: img.id,\r\n            title:  img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\n      return gifs; \r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGriditem = ({id, title, url}) => {\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className= 'card animate__animated fadeIn'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n ","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFectchGifs'\r\nimport { GifGriditem } from './GifGriditem';\r\n\r\n\r\n\r\nexport const GiftGrind = ({ category }) => {\r\n    \r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className= 'animate__animated fadeIn'>{category} </h3>\r\n        {loading && <p className= 'animate__animated flash'> loaging...</p> }\r\n\r\n        <div className= 'card-grid'>\r\n            {\r\n                data.map(({id,title,url})=>{\r\n                    return (\r\n                    <GifGriditem \r\n                    key={id}\r\n                    id={id}\r\n                    title={title} \r\n                    url={url} />)\r\n                })\r\n            }  \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGfis } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n       \r\n        getGfis(category)\r\n        .then(imgs => {\r\n             console.log(imgs);\r\n        \r\n                setState({\r\n                 data: imgs,\r\n                 loading: false\r\n                })\r\n         })\r\n    },[category])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GiftGrind } from './components/GiftGrind';\r\n\r\n\r\nconst  GifExpertApp = () =>{\r\n\r\nconst [categorias, setCategorias] = useState(['']);\r\n/* const handleAdd = () =>{\r\n    setCategorias ([...categorias, 'hugo']); */ \r\n\r\n  \r\n return(\r\n      <div>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategorias={setCategorias}/>\r\n         <hr/>  \r\n             \r\n         <ol>\r\n          {\r\n             categorias.map( category=> {\r\n                return <GiftGrind \r\n                key= {category}\r\n                category={category}/>\r\n                })\r\n          }\r\n          </ol>\r\n          <hr/>\r\n     </div>\r\n       \r\n\r\n    )\r\n\r\n} \r\nexport default GifExpertApp;","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport './index.css'\r\nimport GifExpertApp from './GifExpertApp.js'\r\n\r\nconst divRoot = document.querySelector('#root')\r\nReactDom.render( < GifExpertApp / > , divRoot);\r\n\r\nconst apiKey = 'rZ580dt87J8ZeZpYe584NnxC8mdk3sbZ';\r\nconsole.log(apiKey);"],"sourceRoot":""}